<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
    
    <entry>
      <title><![CDATA[Hello World]]></title>
      <url>http:/2016/11/09/hello-world/</url>
      <content type="text"><![CDATA[Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new "My New Post" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[Linux之网络知识入门]]></title>
      <url>http:/2016/05/02/Internet/</url>
      <content type="text"><![CDATA[###概述Linux网路知识入门。。。 ###本章关键字Linux网络参数，接口设备，设备别名，网络参数配置(临时性(ifconfig,route,hostname,sysctl -w)，永久性(网络接口配置文件))，网络检测工具(ping,netstat,lsof,dig,traceroute)，网络客户工具(lftp,wget,w3m,rsync)，SSH(体系结构，安全验证(基于主机/用户)，SSH免密认证过程)，OpenSSH(ssh,scp,sftp，用户密钥相关文件，密钥的生成，散播，ssh-agent,ssh-add,keychain)，私钥，公钥， ###本章涉及到的命令ifconfig,route,hostname,sysctl -w,lftp,wget,w3m,rsync,ping,netstat,lsof,traceroute,dig,ssh,scp,sftp,ssh-keyscan,ssh-keygen,ssh-add ###本章目地了解Linux网络的配置和使用，对Linux环境下网络的使用有个大概了解； ###各小节联系本章主要分为三个部分，网络基础，网络配置，网络工具(测试工具，客户工具和OpenSSH)；第一部分介绍了Linux中相关的网络背景和网络知识；第二部分讲述了Linux操作系统中对TCP/IP网络参数的配置；第三部分讲述了在Linux操作系统中网络的检测和使用以及远程登录Linux的方法。(熟悉，了解—&gt;配置—&gt;检测，使用) ###一.网络基础 ####1、TCP/IP基本知识 Linux支持各种协议类型的网络(TCP/IP、NetBIOS/NetBEUI、IPX/SPX、AppleTake等),在网络底层也支持Ethernet、Token Ring、ATM、PPP（PPPoE）、FDDI、Frame Relay等网络协议，这些网络协议是Linux内核提供的功能，具体的支持情况由内核编译参数决定；RHEL/CentOS的Linux内核默认支持上述的网络协议； 在TCP/IP网络上，每台设备在存取网络资源之前都需要进行网络配置(IP地址，子网掩码，默认网关，DNS等)，配置方法分为静态配置和动态配置； ####2、网络接口设备与别名 #####2.1、常见的接口类型 接口类型 接口名称 说明 以太网接口 ethX 是最常用的网络接口 令牌环接口 trX 只出现在少数纯IBM环境的网络中 光纤分布式数据接口 fddiX FDDI接口设备昂贵，通常用于核心网或高速网络中 点对点协议接口 pppX 用于Modem/ADSL拨号网络或基于PPTP协议的VPN等 本地回环接口 lo 用于支持UNIX Domain Socket技术的进程相互通信（IPC）注：X是从0开始的整数。如：eth0代表第一块以太网卡，eth1代表第二块以太网卡等。 Linux支持众多网络类型的接口，网络接口设备的驱动程序是inux内核的组成部分，Centos默认是采用内核模块的方式再系统引导时驱动网络接口的，系统检测到网卡之后，我们可以到内核模块配置文件中查看系统加载的网卡驱动模块； #####2.2、设备别名： 使用别名（aliases），单个设备可具备多个地址 别名被标识为（eth0:1，eth0:2）等等 别名被当作单独的接口对待 基于一块物理网卡的多个别名（包括物理网卡自身）只能有一个接口使用DHCP动态分配网络参数 网络接口的启用与停用： 使用 ifup ethX 命令来启用指定的接口 使用 ifdown ethX 命令来禁用指定的接口 ###二、网络配置 ####1、临时性配置(配置后立即生效) #####1.1、可以使用ifconfig开查看并临时配置网络接口：配置： ifconfig &lt;网络接口&gt; &lt;IP地址&gt; [Mask &lt;子网掩码&gt;] [Broadcast &lt;广播地址&gt;] 例如： # ifconfig eth0 10.0.0.10 Mask 255.255.255.0 Broadcast 10.0.0.255 # ifconfig eth0 192.168.0.10 # ifconfig eth0:0 192.168.1.10 注:当IP地址使用标准A、B、C类地址时，广播地址和子网掩码可以省略查看： 列出已经启动的网络接口： # ifconfig 列出全部已经配置的接口(包含已启动和未启动的)： # ifconfig -a 配置别名设备，并绑定多个IP： # ifconfig eth0:1 192.168.1,5 # ifconfig eth0:2 192.168.1.7 #####1.2、route查看和配置路由：查看内核路由： # route 路由的种类： 到主机的路由(Flags字段为H) 到网络的路由(Flags字段为N) 默认网关(Flags字段为G) 临时地设置内核路由表： route add|del [-net|-host] &lt;target [netmask Netmask]&gt; [gw Gateway] [[dev] Interface] add或del：表示添加或删除路由 -net或-host：表示添加到主机或网络的路由 target：指定目标主机或网络地址，若目标为网络地址时，需使用 netmask 指定子网掩码 gw：用于指定网关的IP地址 dev：用于指定路由的网络接口（dev关键字可省略） 添加到主机的路由 # route add -host 10.20.30.148 gw 10.20.30.40 添加到网络的路由 # route add -net 10.20.30.40 netmask 255.255.255.248 eth0 添加默认网关路由 # route add default gw 192.168.1.1 删除到主机的路由 # route del -host 192.168.1.2 dev eth0:0 #####1.3、hostname命令可以临时地修改主机名 格式：hostname &lt;主机名&gt; 例如：# hostname centos.al.co #####1.4、sysctl命令可以临时地开启内核的包转发 sysctl -w net.ipv4.ip_forward=1 ####2、永久性配置(配置后重启设备生效) 配置文件 说明 /etc/sysconfig/network 系统网络配置文件，包含了主机最基本的网络信息用于系统启动 /etc/sysconfig/network-scripts/ifcfg-ethX 以太网接口配置文件 /etc/sysconfig/network-scripts/route-ethX 以太网接口的静态路由配置文件 /etc/hosts 完成主机名映射为IP地址的静态解析功能 /etc/resolv.conf 配置域名服务客户端的配置文件，用于指定域名服务器的位置 /etc/host.conf 配置域名服务客户端的控制文件 #####2.1、网络设备的配置(/etc/sysconfig/network-scripts/ifcfg-ethX) 选项 说明 Type 指定网络接口类型 DEVICE 指定设备名 HWADDR 指定网卡的MAC地址 BOOTPROTO 指定获取网络参数的方式 ONBOOT 指定是否在启动时启用设备 IPADDR 指定静态IP地址 NETMASK 指定子网掩码 BROADCAST 指定广播地址 GATEWAY 指定设备的网关 例如：静态配置： Type=Ethernet DEVICE=eth0 HWADDR=00:02:8A:A6:30:45 BOOTPROTO=static ONBOOT=yes IPADDR=192.168.0.123 NETMASK=255.255.255.0 BROADCAST=192.168.0.255 GATEWAY=192.168.0.1 动态配置： Type=Ethernet DEVICE=eth0 HWADDR=00:02:8A:A6:30:45 BOOTPROTO=dhcp ONBOOT=yes #####2.2、系统网络配置文件(/etc/sysconfig/network)例如： NETWORKING=yes HOSTNAME=centos1.ls-al.loc GATEWAY=192.168.1.254 #####2.3、网络接口的静态路由配置文件(/etc/sysconfig/network-scripts/route-ethX)每个网络接口均可有其静态路由配置文件 例如：/etc/sysconfig/network-scripts/route-eth0配置文件内加入： 192.168.2.0/24 via 172.16.10.88 #####2.4、本地域名解析数据库(/etc/hosts)例如： 127.0.0.1 localhost.localdomain localhost ::1 localhost6.localdomain6 localhost6 192.168.1.200 centos1.ls-al.loc centos1 192.168.0.200 soho.mylabs.me soho #####2.5、配置远程域名解析器(/etc/resolv.conf)例如： nameserver 192.168.1.1 nameverver 208.67.222.222 nameverver 208.67.220.220 domain sinolido.org # 指定本机所在的域 search sinolido.org # 指定默认搜索域 #####2.6、配置域名解析顺序(/etc/host.conf)例如：首先查找 /etc/hosts 文件进行域名解析，然后使用/etc/resolv.conf文件中指定的域名服务器进行域名解析，/etc/host.conf中配置为： order hosts,bind #####2.7、设置包转发(/etc/sysctl.conf) net.ipv4.ip_forward = 1 ###三、网络工具 ####1、网络测试工具 命令工具 功能说明 ifconfig 检测网络接口配置 route 检测路由配置 ping 检测网络连通性 netstat 查看网络状态 lsof 查看指定IP 和/或 端口的进程的当前运行情况 host/dig/nslookup 检测DNS解析 traceroute 检测到目的主机所经过的路由器 tcpdump 显示本机网络流量的状态 #####1.1、ping：测试网络的连通性 # ping www.baidu.com #####1.2、traceroute：显示数据包到达目的主机所经过的路由 # traceroute www.baidu.com #####1.3、netstat：查看网络端口 # netstate -i //显示网络接口状态信息 # netstate -an //显示监控中的和正在使用的Socket的程序信息 # netstate -nr //显示内核路由表信息 # netstate -lnpt //显示TCP传输协议的连接状态信息 # netstate -lnpu //显示UDP传输协议的连接状态信息 #####1.4、lsof：查看在指定IP 和/或 端口上打开的进程 查看指定端口运行的程序 # lsof -i :22 #####1.5、dig：检测DNS解析 根据/etc/resolv.conf 中的DNS服务器配置查询某域名对应的IP地址/IP对应的域名 # dig wwwbaidu.com 查询 192.168.0.252 所对应的域名 # dig -x 192.168.0.252 ####2、网络客户工具 命令 功能 telnet 远程登录 ftp/lftp/ncftp FTP工具 smbclient 存取 SMB/CIFS 共享资源（类似于ftp） wget 下载文件、镜像 WEB站点 rsync 远程文件同步 links/w3m/lynx 浏览器 mutt/mail 邮件客户 ssh/scp/sftp 基于安全协议的 远程登录/远程复制/远程FTP #####2.1、lftp：功能强大的字符界面文件传输工具lftp支持传统ftp的所有子命令；lftp还支持如下子命令（常用的）： help &lt;cmd&gt;：显示指定子命令的帮助信息 get/put/mget/mput：比传统ftp提供更多的选项 pget：多线程下载 reget/reput：续传，等效于 get/put 的 –c 选项 mirror：镜像站点目录 open/close：开始/关闭一个FTP连接 set：设置lftp的环境参数 #####2.2、wget：基于控制台的HTTP/FTP下载工具 wget [option] [] 基本选项： 选项 说明 选项 说明 -h 显示命令帮助 -o logfile 将执行过程写入日志文件logfile -b 后台执行 -a logfile 将执行过程追加到日志文件logfile -v 显示冗余输出 -i urlfile 从urlfile文件读取要下载的文件列表 -q 不显示执行输出 -O outputfile 将下载的文件改名为outputfile -d 显示调试信息 -P PREFIX 将下载的文件存入PREFIX/目录 常用下载选项： 选项 说明 选项 说明 -t NUM 重试次数为NUM –limit-rate=RATE 限制下载速度 -c 继续未完成的任务 -m 镜像站点目录 -N 开启时间戳比较，仅下载比本地新的文件 -k 将下载文件中的链接转换为本地的相对链接 -r 递归下载 -K 转换链接前先备份文件 -l NUM 指定下载深度为NUM –user=USER 指定用户名 -nc 不下载已存在的文件 –password=PASS 指定用户的口令 -nd 不在本地创建目录结构 -L 仅下载本站相关联的链接 -np 不遍历父目录 -H 可下载外部站点相关文件 -p 下载HTML页面所包含的所有元素文件 –delete-after 下载后删除本地文件，常用于生成Squid缓存 常用筛选选项： 选项 说明 -A, –accept=LIST 使用逗号间隔的列表指出允许下载的文件扩展名 -R, –reject=LIST 使用逗号间隔的列表指出不允许下载的文件扩展名 -I, –include-directories=LIST 使用逗号间隔的列表指出允许下载的目录名 -X, –exclude-directories=LIST 使用逗号间隔的列表指出不允许下载的目录名 例如： 下载单个文件 $ wget http://ftp.example.com/pub/getme 下载单个文件（断点续传）、在后台运行（-b） $ wget -cb http://ftp.example.com/isos/somefile.iso 下载单一HTML文件（-p确保页面显示的所有元素均被下载，-k重新建立链接） $ wget -p -k http://esl.jamond.net/index.html 下载 http://example.com 网站上 packages 目录中的所有文件。(-np 不遍历父目录，-nd 不在本机重新创建目录结构） $ wget -r -np -nd http://example.com/packages/ #####2.3、rsync：文件同步可通过LAN/WAN同步不同主机上的文件或目录，也可以同步本地硬盘中的不同文件或目录； rsync 使用所谓的 rsync算法 进行数据同步，同步若干新文件时：只复制有变化的文件，同步原有文件时：只复制文件的变化部分； 两种使用方式： 远程Shell方式 可以使用rsh、ssh等远程Shell，默认使用ssh 用户验证由远程Shell负责 C/S方式 客户连接远程 rsync 服务器 rsync 服务器默认监听 873 端口 用户验证由 rsync 服务器负责(rsync 服务器也可配置为匿名访问) 访问rsync服务器时可使用URL（rsync://host） rsync 命令 同步本地文件或目录 rsync [OPTION...] SRC... [DEST] 将远程文件或目录同步到本地（拉） rsync [OPTION...] [USER@]HOST:SRC... [DEST] 将本地文件或目录同步到远程（推） rsync [OPTION...] SRC... [USER@]HOST:DEST 常用选项 选项 说明 -a，--archive 归档模式，等价于 -rlptgoD（不包括-H） -r，--recursive 对子目录以递归模式处理 -l，--links 保持符号链接文件 -H，--hard-links 保持硬链接文件 -p，--perms 保持文件权限 -t，--times 保持文件时间信息 -g，--group 保持文件属组信息 -o，--owner 保持文件属主信息（仅 root 可用） -D 保持设备文件和特殊文件（仅 root 可用） 举例： 将整个 /home 目录及其子目录同步到 /backups # rsync -a --delete /home /backups 将 /home 目录下的所有内容同步到 /backups/home.0 # rsync -a --delete /home/ /backups/home.0 执行“推”复制同步 # rsync /etc/hosts centos5:/etc/hosts 执行“拉”复制同步 # rsync soho:/etc/hosts /etc/hosts #####2.4、links/w3m：字符界面浏览器 浏览指定的URL $ links http://www.example.com $ w3m http://www.example.com ####3、SSH与OpenSSH #####3.1、SSHSSH简介 SSH 的英文全称为 Secure SHell SSH 是建立在应用层和传输层基础上的安全协议 SSH 目的是要在非安全网络上提供安全的远程登录和其他安全服务 所有使用 SSH 协议的通信，包括口令，都会被加密传输 用于替代传统的 telnet、ftp、r族命令（rlogin、rsh、rcp） SSH（Secure SHell）协议是 C/S 模式协议 分为 SSH 的客户端和服务器端 一次成功的 SSH 会话需要两端通力合作来完成 SSH协议体系结构(见图) SSH基于主机的安全验证 在 SSH 协议中每台主机都有一对或多对主机密钥 首次启动 SSH 服务时会自动生成，一般无需变更 SSH 通过严格的主机密钥检查 用户可以核对来自服务器的公钥同之前所定义的密钥是否一致，防止了某个用户访问一个他没有相应公钥的主机 SSH 利用主机的公钥（而不是IP地址）实现主机身份认证，不容易受到IP地址欺骗的攻击 SSH基于用户的安全验证 基于口令的安全验证 只要用户知道自己用户账号和口令，就可以登录到远程主机 口令验证由 PAM 进行验证 SSH 对所有传输的数据进行加密传输（包括用户口令） 不能避免受到“中间人”方式的攻击(冒充真正的服务器) 基于密钥的安全验证 每个用户都拥有自己的一对或多对密钥 包括：公钥和私钥 密钥协议： RSA 或 DSS/DSA 每个用户自己的密钥对需用户自己生成 可以使用不同的密钥协议创建多对密钥 并将公密发布到需要访问的服务器上 基于密钥的安全验证不需要在网络上传送用户口令 可以避免“中间人”的攻击方式，因为“中间人”没有你的私钥 用户密钥认证协议 RSA 和 DSS/DSA 认证承诺不必提供密码就能够同远程系统建立连接 RSA/DSA 密钥认证协议的基本工作原理： 密钥由一对组成：一把专用密钥（亦称私钥）和一把公用密钥（亦称公钥）。 密钥对由客户端生成，私钥由用户自己保管，并将公钥散播到需要认证之处（登录服务器端）。 公钥用于对消息进行加密，只有拥有私钥的人才能对该消息进行解密。 公钥只能用于加密，而私钥只能用于对由匹配的公钥编码的消息进行解密。 用户密钥认证过程 SSH 客户向 SSH 服务器提出用户密钥认证请求 SSH 服务器在用户的工作目录下寻找其公钥，然后把它和用户发送过来的公钥进行比较 如果两个密钥一致 服务器就用公钥生成加密“质询”（challenge）并把它发送给客户端软件 客户端软件收到“质询”之后就使用用户自己的私钥解密再把它送还给服务器 认证通过后，客户端向服务器发送会话请求开始双方的加密会话 否则认证失败 #####3.2、OpenSSHOpenSSH简介 OpenSSH 是 SSH 协议的免费开源实现 安全、加密的网络连接工具（ssh、scp、sftp） 代替了 telnet、 rlogin、rsh、rcp 和 ftp 等工具 OpenSSH 支持 SSH 协议的版本 1和 2。 自从 OpenSSH 的版本 2.9 以来，默认的协议是版本 2 版本 2的协议支持 RSA 和 DSA，默认使用 RSA 密钥 OpenSSH 支持的用户认证方式 支持基于 PAM 的用户口令认证 支持用户密钥认证 SSH ssh 用于替代 telnet/rlogin 格式 ssh [user@]hostname ssh [user@]hostname command 举例 $ ssh -l osmond 192.168.0.100 $ ssh osmond@192.168.0.100 $ ssh osmond@192.168.0.100 &quot;ls ~&quot; SCP scp 用于替代 rcp 格式：scp [option] &lt;source&gt; &lt;destination&gt; 远程文件的指定方式是： [user@]host:/path/to/file 选项： -r：用于递归复制子目录 -p：用于保留被复制文件的时间戳和权限 -C：用于压缩数据流 举例 $ scp osmond@192.168.0.101:remotefile localfile $ scp -rpC osmond@backup.ls-al.me:/data . Sftp sftp命令是基于SSH协议的 ftp 的客户端 与 ftp 类似, 但它进行加密传输，比FTP有更高的安全性 格式 sftp [user@]hostname 举例： $ sftp osmond@192.168.0.101 进入 sftp 会话之后就可以使用 ftp 子命令上传和下载文件了 OpenSSH的主机密钥生成 OpenSSH的服务启动脚本包含了主机密钥的生成命令,首次启动时默认会生成多对主机密钥（SSH-1 RSA、SSH-2 RSA、SSH-2 DSA） 若系统是从一个旧系统克隆而来,需要重新生成主机密钥 在 RHEL/CentOS 上重新生成主机密钥 # rm -f /etc/ssh/ssh_host_* # service sshd restart OpenSSH密钥生成和分发 密钥生成 ssh-keygen [-t rsa1|rsa|dsa] 默认使用rsa密钥认证类型 密钥分发 私钥（private key）被保留在自己的系统上 通常使用口令保护（建议） 重新设置私钥保护短语 $ ssh-keygen -f ~/.ssh/id_dsa -p 公钥（public key）被分发（复制）到目标系统 $ ssh-copy-id -i ~/.ssh/id_dsa.pub [user@]host ssh-agent和ssh-add ssh-agent 是一个用户认证代理（authentication agent） 用于在登录会话中缓存解密后的私钥 ssh/scp/sftp命令内置支持了同 ssh-agent 通信的机制 使得私钥保护口令只需要输入一次 在Shell中运行 $ eval $(ssh-agent) 或 $ ssh-agent bash 缺点 每次登录会话都启动一个新的 ssh-agent 副本 浪费资源 得使用 ssh-add 向每个新的 ssh-agent 副本添加私钥 ssh-agent与cron任务系统不兼容 cron 任务无法从它们的环境中继承 ssh-agent 所需的 SSH_AUTH_SOCK 变量 ssh-add 用于向认证代理的高速缓存中添加私钥 keychain简介 keychain 是一个 ssh-agent 的前端工具 使用keychain完美实现无口令登录 让每个用户只使用一个 ssh-agent 进程 使用一个认证代理可以跨越不同的登录会话 只需对每个私钥执行一次 ssh-add 即可 与 cron任务系统兼容 安装 # yum --enablerepo=rpmforge install keychain # man keychain]]></content>
    </entry>

    
  
  
</search>
